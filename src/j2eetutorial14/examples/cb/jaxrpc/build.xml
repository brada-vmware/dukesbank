<!--
 * Copyright (c) 2004 Sun Microsystems, Inc.  All rights reserved.  U.S. 
 * Government Rights - Commercial software.  Government users are subject 
 * to the Sun Microsystems, Inc. standard license agreement and 
 * applicable provisions of the FAR and its supplements.  Use is subject 
 * to license terms.  
 * 
 * This distribution may include materials developed by third parties. 
 * Sun, Sun Microsystems, the Sun logo, Java and J2EE are trademarks 
 * or registered trademarks of Sun Microsystems, Inc. in the U.S. and 
 * other countries.  
 * 
 * Copyright (c) 2004 Sun Microsystems, Inc. Tous droits reserves.
 * 
 * Droits du gouvernement americain, utilisateurs gouvernementaux - logiciel
 * commercial. Les utilisateurs gouvernementaux sont soumis au contrat de 
 * licence standard de Sun Microsystems, Inc., ainsi qu'aux dispositions 
 * en vigueur de la FAR (Federal Acquisition Regulations) et des 
 * supplements a celles-ci.  Distribue par des licences qui en 
 * restreignent l'utilisation.
 * 
 * Cette distribution peut comprendre des composants developpes par des 
 * tierces parties. Sun, Sun Microsystems, le logo Sun, Java et J2EE 
 * sont des marques de fabrique ou des marques deposees de Sun 
 * Microsystems, Inc. aux Etats-Unis et dans d'autres pays.
-->

<!DOCTYPE project [
  <!ENTITY targets SYSTEM "../../common/targets.xml">
]>

<project name="Coffee Break Supplier, JAX-RPC" default="build-service" basedir=".">

  <property file="../../common/build.properties"/>
  <property file="build.properties"/>

  &targets;

<!-- ========================== CLASSPATHS ============================= -->

  <path id="run.classpath">
    <fileset dir="${dist}">
      <include name="*.jar"/>
    </fileset>
    <fileset dir="${j2ee.home}/lib">
      <include name="*.jar"/>
    </fileset>
    <fileset dir="${j2ee.home}/lib/endorsed">
      <include name="*.jar"/>
    </fileset>
  </path>

  <path id="compile.classpath">
    <pathelement location="${build}/server"/>
    <pathelement location="${common}"/>
    <fileset dir="${j2ee.home}/lib">
      <include name="*.jar"/>
    </fileset>
  </path>
  
 <!-- ========================== PREPARE ============================= -->

  <target name="prepare" depends="init"
     description="Creates the build and dist directories" >
     <echo message="Creating the required directories...." />
     <mkdir dir="${build}/client" />
     <mkdir dir="${build}/server" />
     <mkdir dir="${build}/registry" />
     <mkdir dir="${dist}" />
   </target>
   
   <target name="init" depends="j2ee-home-test">
      <tstamp/>
   </target>


 <!-- ========================== WSCOMPILE ============================= -->
 
 <target name="set-wscompile" >
     <condition property="wscompile" value="${wscompile.dir}/wscompile.bat">
        <os family="windows"/>
     </condition>
     <condition property="wscompile" value="${wscompile.dir}/wscompile">
        <not>
           <os family="windows"/>
        </not>
     </condition>
  </target>

  <target name="run-wscompile"  depends="prepare,set-wscompile"
       description="Runs wscompile">
    <echo message="Running wscompile:"/>
    <echo message="  ${wscompile} ${param1}"/>
    <exec executable="${wscompile}">
       <arg line="${param1}"/>
    </exec>
  </target>

  <target name="generate-wsdl"
      description="Runs wscompile to generate the WSDL file">
    <antcall target="run-wscompile">
      <param name="param1" value="-define -mapping ${build}/server/${mapping.file} -d ${build}/server -nd ${build}/server  -classpath ${build}/server ${config.interface.file}"/>
    </antcall>
  </target>

  <target name="generate-stubs"
      description="Runs wscompile to generate the client stub classes">
    <antcall target="run-wscompile">
      <param name="param1" value="-gen:client -d ${build}/client -classpath ${build}/client -keep ${config.wsdl.file}"/>
    </antcall>
  </target>

<!-- ========================== COMPILE ============================= -->

  <target name="compile-common" depends="prepare"
      description="Compiles the common beans">
      <echo message="Compiling the common bean source code...."/>
      <ant antfile="../common/build.xml" 
           dir="../common" 
           target="build">
      </ant>
  </target>

  <target name="compile-service" depends="prepare"
      description="Compiles the server-side source code">
      <echo message="Compiling the server-side source code...."/>
      <javac
         srcdir="${server.src}"
         destdir="${build}/server"
         classpath="${common}:dist/${registry.jar}"
         includes="*.java"
         source="1.4"
      />
     <copy todir="${build}/server/${package.path}">
         <fileset dir="src/server/${package.path}">
         <include name="*.properties"/>
         </fileset>
     </copy>
  </target>
 
  <target name="compile-registry" depends="prepare" 
        description="Compiles the registry source code"  >
        <echo message="Compiling the registry source code...."/>
      <javac srcdir="${registry.src}" destdir="${build}/registry" source="1.4">
          <include name="**/*.java" />
          <classpath refid="compile.classpath"/>
      </javac>
      <javac
         srcdir="../common/src"
         destdir="${build}/registry"
         includes="**/URLHelper.java"
         source="1.4"
      >
      <classpath refid="compile.classpath" />
      <classpath path="${common}" />
      </javac>
      <copy file="../common/src/${package.path}/CoffeeBreak.properties" 
        todir="${build}/registry/${package.path}" />
  </target>
  
  <target name="compile-client" depends="prepare" 
         description="Compiles the client-side source code"  >
         <echo message="Compiling the client source code...."/>
       <javac srcdir="${client.src}" destdir="${build}/client" source="1.4">
           <include name="**/*.java" />
           <classpath refid="compile.classpath"/>
       </javac>
      <javac
         srcdir="../common/src"
         destdir="${build}/client"
         includes="**/URLHelper.java"
         source="1.4"
      >
         <classpath refid="compile.classpath"/>
      	 <classpath path="${common}" />
      </javac>
  </target>
  
 <!-- ========================== COPY & REMOVE ===================== -->

  <target name="copy-common-service"
     description="Copies common class files to build/service
        because multiple classpaths for a wscompile command run 
        within ant do not work.">
     <echo message="Copying common classes...."/>
     <copy todir="${build}/server/${package.path}">
         <fileset dir="../common/build/${package.path}"  />
     </copy>
  </target>

    <target name="copy-common-client"
       description="Copies common class files to build/client
       but doesn't copy beans because they are created w. generate-stubs.">
       <echo message="Copying common classes...."/>
       <copy file="../common/build/${package.path}/DateHelper.class" 
        todir="${build}/client/${package.path}"/>
    </target> 
 
   
<!-- ========================== PACKAGE ============================= -->


  <target name="package-client"
      description="Builds the JAR file that contains the client ">
      <echo message="Building the client JAR file...."/>
      <delete file="${dist}/${client.jar}" />
      <jar jarfile="${dist}/${client.jar}" >
        <fileset dir="${build}/client">
         <include name="**/*.class"/>
         <include name="**/*.properties"/>
	</fileset>
       </jar>
  </target>

  <target name="package-registry" 
      description="Builds the JAR file that contains the registry routines">
      <echo message="Building the registry JAR file...."/>
      <delete file="${dist}/${registry.jar}" />
      <jar jarfile="${dist}/${registry.jar}" >
        <fileset dir="${build}/registry" />
      </jar>
  </target>

  <target name="create-war"
      description="Builds the WAR file for the JAX-RPC supplier">
      <echo message="Building the WAR file...."/>
     <delete file="${assemble.war}/${war.file}" />
     <delete dir="${assemble.war}/WEB-INF" />
     <copy file="${build}/server/Supplier.wsdl" todir="${assemble.war}/WEB-INF/wsdl" />
     <copy file="${build}/server/mapping.xml" todir="${assemble.war}/server" />
     <copy todir="${assemble.war}/WEB-INF">
       <fileset dir=".">
         <include name="web.xml" />
         <include name="sun-web.xml" />
         <include name="webservices.xml" />
       </fileset>
     </copy>
     <copy todir="${assemble.war}/WEB-INF/classes/">
       <fileset dir="${build}/server">
         <include name="**/*.class" />
         <include name="**/*.properties" />
       </fileset>
     </copy>
     <copy todir="${assemble.war}/WEB-INF/lib/" 
           file="dist/registry-org.jar" />      
     <jar jarfile="${assemble.war}/${war.file}" filesonly="true" >
       <fileset dir="${assemble.war}" includes="WEB-INF/**, server/**" />
     </jar>
     <copy file="${assemble.war}/${war.file}" todir="." />
  </target>

<!-- ========================== RUN ============================= -->

  <target name="run-test-order" 
     description="Runs TestOrderCaller">
     <antcall target="run-test-client">
       <param name="client.class" value="com.sun.cb.TestOrderCaller"/>
     </antcall>
  </target>

  <target name="run-test-price" 
     description="Runs TestPriceFetcher">
     <antcall target="run-test-client">
       <param name="client.class" value="com.sun.cb.TestPriceFetcher"/>
     </antcall>
  </target>

  <target name="run-test-client" 
     description="Runs a test JAX-RPC client.">
      <java 
            fork="on" 
            classpath="dist/${client.jar}" 
            classname="${client.class}" >
      		 <classpath refid="run.classpath" />
      </java>
  </target>


<!-- ========================== BUILD ============================= -->
 
 
  
   <target name="build-service" 
       depends="compile-service,copy-common-service,generate-wsdl"
       description="Executes the targets needed to build the service.">
    </target>
    
    <target name="build-client" 
       depends="generate-stubs,copy-common-client,compile-client,package-client"
       description="Executes the targets needed to build the client files.">
    </target>
    
    <target name="build-registry" 
        depends="compile-registry,package-registry"
        description="Executes the targets needed to build the registry JAR.">
    </target>

  
<!-- ========================== UTIL ============================= -->

  <target name="listprops-cb-jaxrpc" depends="set-wscompile,listprops"
     description="Displays values of some of the properties of this build file">
     <echo message="j2ee.home: ${j2ee.home}" />
     <echo message="war.file: ${war.file}" />
     <echo message="client.jar: ${client.jar}" />
     <echo message="registry.jar: ${registry.jar}" />
     <echo message="wscompile: ${wscompile}" />
  </target>


</project>
