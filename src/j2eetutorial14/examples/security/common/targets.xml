 <!-- targets.xml: Referenced by the build.xml files, this file
     contains targets common to all the security examples.  -->
 
 <path id="run.classpath">
    <fileset dir="${dist}">
      <include name="*.jar"/>
    </fileset>
    <fileset dir="${j2ee.home}/lib">
      <include name="*.jar"/>
    </fileset>
    <fileset dir="${j2ee.home}/lib/endorsed">
          <include name="*.jar"/>
    </fileset>
   </path>

  <path id="jaxrpc.classpath">
    <fileset dir="${j2ee.home}/lib">
      <include name="*.jar"/>
    </fileset>
  </path>

  <target name="init" depends="j2ee-home-test">
      <tstamp/>
  </target>
 
  <target name="prepare" depends="init"
   	description="Create build directories.">
    <mkdir dir="${build}" />   
    <mkdir dir="${build}/${example}" />	
  </target>


  <path id="classpath">
    <fileset dir="${j2ee.home}/common/lib">
      <include name="*.jar"/>
    </fileset>
  </path>
  
  
  <target name="copy" depends="prepare" 
     description="Compile app Java files and copy HTML and JSP pages" >
    <copy todir="${build}">
      <fileset dir="web">
        <include name="**/*.html" />
        <include name="**/*.jsp" />
        <include name="**/*.gif" />
      </fileset>
    </copy>
   </target>
  
  <target name="install-config" description="Install web application"
          depends="build">
    <install url="${url}" username="${username}" password="${password}"
          path="${context.path}" config="file:${example.path}/context.xml"/>
  </target>
  
   <target name="prepare-dist" 
     description="Creates the dist directory" >
     <echo message="Creating the required directories...." />
     <mkdir dir="${dist}" />
  </target>

  <target name="set-wscompile" >
     <condition property="wscompile" value="${wscompile.dir}/wscompile.bat">
        <os family="windows"/>
     </condition>
     <condition property="wscompile" value="${wscompile.dir}/wscompile">
        <not>
           <os family="windows"/>
        </not>
     </condition>
  </target>

  <target name="compile-service" depends="prepare"
      description="Compiles the server-side source code">
      <echo message="Compiling the server-side source code...."/>
      <javac
         srcdir="${src}"
         destdir="${build}"
         includes="*.java"
         excludes="*Client.java"
      />
  </target>

  <target name="run-wscompile"  depends="prepare,set-wscompile"
       description="Runs wscompile">
    <echo message="Running wscompile:"/>
    <echo message="  ${wscompile} ${param1}"/>
    <exec executable="${wscompile}">
       <arg line="${param1}"/>
    </exec>
  </target>

  <target name="generate-wsdl"
      description="Runs wscompile to generate the WSDL file and mapping file">
    <antcall target="run-wscompile">
      <param name="param1" value="-define -mapping ${build}/${mapping.file} -d ${build} -nd ${build}  -classpath ${build} ${config.interface.file}"/>
    </antcall>
  </target>

  <target name="generate-interface"
      description="Runs wscompile to generate the service endpoint interface">
    <antcall target="run-wscompile">
      <param name="param1" value="-import -d ${build} -nd ${build} -f:norpcstructures -classpath ${build} ${config.wsdl.file}"/>
    </antcall>
  </target>

  <target name="generate-stubs"
      description="Runs wscompile to generate the client stub classes">
    <antcall target="run-wscompile">
      <param name="param1" value="-gen:client -d ${build} -classpath ${build} ${config.wsdl.file}"/>
    </antcall>
  </target>

  <target name="compile-client" depends="prepare" 
      description="Compiles the client-side source code"  >
      <echo message="Compiling the client source code...."/>
    <javac srcdir="${src}" destdir="${build}">
        <include name="**/*.java" />
     <classpath refid="jaxrpc.classpath"/>
     <classpath path="${build}" />
    </javac>
  </target>

  <target name="package-client" depends="prepare-dist"
      description="Builds the JAR file that contains the client">
      <echo message="Building the client JAR  file...."/>
      <delete file="${dist}/${client.jar}" />
      <jar jarfile="${dist}/${client.jar}" >
        <fileset dir="${build}" />
      </jar>
  </target>

 
  <target name="build-service" depends="clean,compile-service,generate-wsdl"
     description="Executes the targets needed to build the service.">
  </target>

  <target name="build-static" depends="clean,generate-stubs,
     compile-client,package-client"
     description="Executes the targets needed to build a static stub client.">
  </target>


  <target name="build-webclient" depends="clean,prepare,generate-stubs,generate-wsdl"
     description="Executes the targets needed to build a J2EE app client.">
  </target>

  <target name="run-client" 
     description="Runs a stand-alone (non-J2EE) client">
      <java classname="${client.class}" fork="yes" >
        <arg line="${endpoint.address}" />
        <classpath refid="run.classpath" />
    </java>
  </target>

<target name="run-secure-client" 
description="Runs a client with basic authentication over SSL">
<property file="../../common/admin-password.txt" />
<java classname="${client.class}" fork="yes" >
<arg line="${admin.user} ${AS_ADMIN_PASSWORD} ${secure.endpoint}" />
<classpath refid="run.classpath" />
</java>
</target>

<target name="run-mutualauth-client" 
description="Runs a client with mutual authentication over SSL">
<java classname="${client.class}" fork="yes" >
<arg line="${key.store} ${key.store.password} 
${trust.store} ${trust.store.password} 
${mutualauth.endpoint}" />
<classpath refid="run.classpath" />
</java>
</target>


  <target name="listprops-security" depends="set-wscompile" 
     description="Displays values of some of the properties of this build file">
     <echo message="j2ee.home = ${j2ee.home}" />
     <echo message="wscompile = ${wscompile}" />
     <echo message="build = ${build}" />
     <echo message="src = ${src}" />
     <echo message="dist = ${dist}" />
     <echo message=" " />
     <echo message="example = ${example}" />
     <echo message="client.jar = ${client.jar}" />
     <echo message="client.class = ${client.class}" />
     <echo message=" " />
     <echo message="admin.host = ${admin.host}" />
     <echo message="domain.resources.port = ${domain.resources.port}" />
     <echo message="secure.context = ${secure.context}" />
     <echo message="mutualauth.context = ${mutualauth.context}" />
     <echo message="url.pattern = ${url.pattern}" />
     <echo message="endpoint.address = ${endpoint.address}" />
  </target>


